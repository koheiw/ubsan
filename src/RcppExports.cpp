// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// memory_leak
void memory_leak();
RcppExport SEXP _ubsan_memory_leak() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    memory_leak();
    return R_NilValue;
END_RCPP
}
// no_memory_leak
void no_memory_leak();
RcppExport SEXP _ubsan_no_memory_leak() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    no_memory_leak();
    return R_NilValue;
END_RCPP
}
// has_asan
void has_asan();
RcppExport SEXP _ubsan_has_asan() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    has_asan();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ubsan_memory_leak", (DL_FUNC) &_ubsan_memory_leak, 0},
    {"_ubsan_no_memory_leak", (DL_FUNC) &_ubsan_no_memory_leak, 0},
    {"_ubsan_has_asan", (DL_FUNC) &_ubsan_has_asan, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_ubsan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
